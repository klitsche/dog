#!/usr/bin/env php
<?php

declare(strict_types=1);

use Klitsche\Dog\Cli\CommandUsageReporter;
use Klitsche\Dog\Cli\GenerateCommand;
use Symfony\Component\Console\Application;
use Symfony\Component\Console\ConsoleEvents;
use Symfony\Component\EventDispatcher\EventDispatcher;
use Symfony\Component\Stopwatch\Stopwatch;

// phar only: user space autoload
if (Phar::running()) {
    $file = getcwd() . '/vendor/autoload.php';
    if (file_exists($file)) {
        require $file;
    }
}

// dev or phar autoload (overwrite user space)
foreach ([__DIR__ . '/../../../autoload.php', __DIR__ . '/../vendor/autoload.php'] as $file) {
    if (file_exists($file)) {
        require $file;
        break;
    }
}

$usageReporter = new CommandUsageReporter(new Stopwatch());

$dispatcher = new EventDispatcher();
$dispatcher->addListener(ConsoleEvents::COMMAND, [$usageReporter, 'onConsoleCommand']);
$dispatcher->addListener(ConsoleEvents::TERMINATE, [$usageReporter, 'onConsoleTerminate']);

$version = '@git-tag@' == '@' . 'git-tag@' ? 'master-dev' : '@git-tag@';
$application = new Application('dog', $version);
$application->setDispatcher($dispatcher);
$application->add(new GenerateCommand('generate', $dispatcher));
$application->setDefaultCommand('generate');
$application->run();